#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W           &kp E     &kp R            &kp T                                         &kp Y        &kp U  &kp I      &kp O      &kp P
&mt A LEFT_CONTROL  &kp S           &kp D     &kp F            &kp G        &trans            &kp DEL        &kp H        &kp J  &kp K      &kp L      &mt RALT MINUS
&mt LEFT_SHIFT Z    &kp X           &kp C     &kp V            &kp B        &kp LEFT_GUI      &kp UNDER      &kp N        &kp M  &mkp LCLK  &mkp RCLK  &kp SLASH
&kp LCTRL           &kp LEFT_SHIFT  &kp LALT  &lt 1 LA(GRAVE)  &lt 2 SPACE  &lt 3 TAB         &kp BACKSPACE  &lt 4 ENTER                               &kp ESCAPE
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        Symbol+Arrow {
            bindings = <
&mt LALT EXCL   &kp DQT      &kp HASH  &kp DOLLAR     &kp PERCENT                              &kp AMPERSAND    &kp SQT    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS
&kp LCTRL       &kp LEFT     &kp UP    &kp RIGHT      &kp QUESTION  &trans      &kp AT         &kp EXCLAMATION  &kp DQT    &kp HASH              &kp DOLLAR             &mt RALT PERCENT
&kp LEFT_SHIFT  &kp PAGE_UP  &kp DOWN  &kp PAGE_DOWN  &kp LT        &kp GT      &kp UNDER      &kp SEMICOLON    &kp COLON  &kp COMMA             &kp PERIOD             &kp SLASH
&kp ESC         &kp HOME     &kp END   &trans         &trans        &trans      &kp BACKSPACE  &kp ENTER                                                                &kp BACKSLASH
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        Number {
            bindings = <
&kp F1   &kp F2   &kp F3  &kp F4  &kp F5                                       &kp N0               &kp N1  &kp N2  &kp N3  &trans
&kp F6   &kp F7   &kp F8  &kp F9  &kp F10  &trans               &kp ASTERISK   &kp PLUS             &kp N4  &kp N5  &kp N6  &kp EQUAL
&kp F11  &kp F12  &trans  &trans  &trans   &kp PRINTSCREEN      &kp SLASH      &kp MINUS            &kp N7  &kp N8  &kp N9  &kp PERIOD
&trans   &trans   &trans  &trans  &trans   &trans               &kp BACKSPACE  &mt RIGHT_ALT EQUAL                          &kp RIGHT_CONTROL
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &trans                  &trans           &trans                   &trans                       &trans  &trans    &kp UP_ARROW    &trans     &trans
&kp HOME        &kp LC(LS(TAB))         &kp LA(TAB)      &kp LC(TAB)              &kp END  &trans      &trans  &trans  &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &kp LA(LS(TAB))  &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans    &trans          &trans     &trans
&trans          &trans                  &trans           &trans                   &trans   &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&ROTATE SCRL_RIGHT SCRL_LEFT>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans       &trans    &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp HOME  &kp LEFT     &kp UP    &kp RIGHT      &kp END
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &kp PAGE_UP  &kp DOWN  &kp PAGE_DOWN  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                          &trans
            >;

            sensor-bindings = <&ROTATE SCRL_RIGHT SCRL_LEFT>;
        };
    };
};
